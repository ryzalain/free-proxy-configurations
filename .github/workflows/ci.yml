name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black isort mypy bandit safety
        
    - name: Lint with flake8
      run: |
        flake8 scripts/ tests/ --max-line-length=88 --extend-ignore=E203,W503
        
    - name: Check code formatting with black
      run: |
        black --check scripts/ tests/
        
    - name: Check import sorting with isort
      run: |
        isort --check-only scripts/ tests/
        
    - name: Type checking with mypy
      run: |
        mypy scripts/ --ignore-missing-imports
        
    - name: Security check with bandit
      run: |
        bandit -r scripts/ -ll
        
    - name: Safety check
      run: |
        safety check
        
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=scripts --cov-report=xml --cov-report=term-missing
        
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test proxy generation
      run: |
        python scripts/proxy_generator.py
        
    - name: Test configuration validation
      run: |
        python tests/config_validator.py configs/singbox.json --type singbox
        python tests/config_validator.py configs/universal.txt --type subscription
        
    - name: Test auto updater (dry run)
      run: |
        timeout 60s python scripts/auto_updater.py || true